# Indirection
## Pointers and References
 - References
  - Can only set target when declaring it
  - All other actions go through the reference
  - Cannot be made to refer to something else
 - Pointer
  - Can point to something
  - Can point to "nowhere"
  - Can be made to point to something else
  - example:
   int* pA = &A;
   int *pA = &B;

  - to get the target a pointer points to use * operator:
    *pA = 5; -> puts 5 in address pA points to
  - example:
   Person Kate("Kate", "Gregory", 234);
   Person* pKate = &Kate;
   name = (*pKate).GetName();
   name = pKate->GetName();

  - NULL pointer => nullptr

## Const
 - commit to the compiler that you wont change something
 - Declaring a local variable
    - int const zero = 0;
 - As a function parameter
    - int foo(int const i) //i doesnt change inside the Function
    - int something(Class const& obj) // copies person and doesnt allow to change p
 - Modifier on a member function
    - int Function() const; //doesnt change the member variables of calling object

## Const and Indirection
  - int* const cpI -> cant change cpi to point to something else/ another address )
  - int const* cpI -> cpI points to something constant so it cant be used to change target's value
  - int const* const crazy -> why not both, cant change crazy to another address and cant change value of target
